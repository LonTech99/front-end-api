{"ast":null,"code":"var _jsxFileName = \"/Users/lonclephas/react-app/src/GameDex.js\";\nimport React from 'react';\nimport { Card } from './Card';\nimport { Modal } from 'reactstrap';\nimport { ModalHeader } from 'reactstrap';\nimport { ModalBody } from 'reactstrap';\nimport { ModalFooter } from 'reactstrap';\nimport { Table } from 'reactstrap';\nimport { Button } from 'reactstrap';\nimport { Input } from 'reactstrap';\nimport { FormGroup } from 'reactstrap';\nimport { Label } from 'reactstrap';\nimport { Axios } from 'reactstrap';\nexport class GameDex extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      game: [],\n      editGameData: {\n        id: '',\n        name: '',\n        genre: '',\n        gameconsole: ''\n      },\n      editGameModal: false\n    };\n  }\n\n  componentDidMount() {\n    this.loadGame();\n  }\n\n  editGameModal() {\n    this.setState({\n      editGameModal: !this.state.editGameModal\n    });\n  }\n\n  async loadGame() {\n    const response = await fetch(`http://145.24.222.167:8000/games`);\n    const json = await response.json();\n    console.log(json.items);\n    this.setState({\n      game: json.items\n    });\n  }\n\n  updateGame() {\n    let _this$state$editGameD = this.state.editGameData,\n        name = _this$state$editGameD.name,\n        genre = _this$state$editGameD.genre,\n        gameconsole = _this$state$editGameD.gameconsole;\n    axios.put('http://145.24.222.167:8000/games/' + this.state.editGameData.id, {\n      name,\n      genre,\n      gameconsole\n    }).then(response => {\n      console.log(response.data);\n    });\n  }\n\n  editGame(id, name, genre, gameconsole) {\n    this.setState({\n      editGameData: {\n        id,\n        name,\n        genre,\n        gameconsole\n      },\n      editGameModal: !this.state.editGameModal\n    });\n  }\n\n  render() {\n    let thumbs = this.state.game.map(singleGame => {\n      return React.createElement(\"tr\", {\n        key: singleGame.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, singleGame.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, singleGame.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, singleGame.genre), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, singleGame.gameconsole), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        isOpen: this.state.editGameModal,\n        toggle: this.editGameModal.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.editGameModal.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Edit game\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Input, {\n        id: \"name\",\n        value: this.state.editGameData.name,\n        onChange: e => {\n          let editGameData = this.state.editGameData;\n          editGameData.name = e.target.value;\n          this.setState({\n            editGameData\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"genre\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Genre\"), React.createElement(Input, {\n        id: \"genre\",\n        value: this.state.editGameData.genre,\n        onChange: e => {\n          let editGameData = this.state.editGameData;\n          editGameData.genre = e.target.value;\n          this.setState({\n            editGameData\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"gameconsole\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Genre\"), React.createElement(Input, {\n        id: \"gameconsole\",\n        value: this.state.editGameData.gameconsole,\n        onChange: e => {\n          let editGameData = this.state.editGameData;\n          editGameData.gameconsole = e.target.value;\n          this.setState({\n            editGameData\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.updateGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Update game \"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggleEditGameModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Cancel\"))), React.createElement(Button, {\n        color: \"success\",\n        size: \"sm\",\n        className: \"mr-2\",\n        onClick: this.editGame.bind(this, singleGame.id, singleGame.name, singleGame.genre, singleGame.gameconsole),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Edit\"));\n    });\n    return React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, thumbs)));\n  }\n\n}","map":{"version":3,"sources":["/Users/lonclephas/react-app/src/GameDex.js"],"names":["React","Card","Modal","ModalHeader","ModalBody","ModalFooter","Table","Button","Input","FormGroup","Label","Axios","GameDex","Component","constructor","state","game","editGameData","id","name","genre","gameconsole","editGameModal","componentDidMount","loadGame","setState","response","fetch","json","console","log","items","updateGame","axios","put","then","data","editGame","render","thumbs","map","singleGame","bind","e","target","value","toggleEditGameModal"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card } from './Card';\nimport { Modal } from 'reactstrap'\nimport { ModalHeader } from 'reactstrap'\nimport { ModalBody } from 'reactstrap'\nimport { ModalFooter } from 'reactstrap'\nimport { Table } from 'reactstrap'\nimport { Button } from 'reactstrap'\nimport { Input } from 'reactstrap'\nimport { FormGroup } from 'reactstrap'\nimport { Label } from 'reactstrap'\nimport { Axios } from 'reactstrap'\n\nexport class GameDex extends React.Component {\n\n    constructor() {\n        super()\n        this.state = { \n            game: []\n        ,\n        editGameData: {\n            id: '',\n            name: '',\n            genre: '',\n            gameconsole: ''\n        },\n        editGameModal: false\n    }\n\n    }\n\n    componentDidMount() {\n        this.loadGame()\n        }\n\n    editGameModal() {\n        this.setState({\n            editGameModal: ! this.state.editGameModal\n        });\n    }\n\n        async loadGame() {\n            const response = await fetch(`http://145.24.222.167:8000/games`)\n            const json = await response.json()\n            console.log(json.items)\n            this.setState({game: json.items})\n        }    \n\n        updateGame(){\n            let {name, genre, gameconsole} = this.state.editGameData;\n            axios.put('http://145.24.222.167:8000/games/' + this.state.editGameData.id, {\n                name, genre, gameconsole}).then((response) => {\n                    console.log(response.data);\n                });\n            }\n\n        editGame(id, name, genre, gameconsole) {\n            this.setState({\n                editGameData: { id, name, genre, gameconsole}, editGameModal: ! this.state.editGameModal\n            });\n        }\n\n        \n\n    render() {\n\n        let thumbs = this.state.game.map((singleGame) => {\n            return(\n                <tr key={singleGame.id}>\n                    <td>{singleGame.id}</td>\n                    <td>{singleGame.name}</td>\n                    <td>{singleGame.genre}</td>\n                    <td>{singleGame.gameconsole}</td>\n                    <td>\n                    </td>\n                    <Modal isOpen={this.state.editGameModal} toggle={this.editGameModal.bind(this)}>\n                         <ModalHeader toggle={this.editGameModal.bind(this)}>Edit game</ModalHeader>\n                         <ModalBody>\n                             <FormGroup>\n                           <Label for=\"name\">Name</Label>\n                           <Input id=\"name\" value={this.state.editGameData.name} onChange={(e) => {\n                               let { editGameData} = this.state;\n                 \n                               editGameData.name=e.target.value;\n                               this.setState({editGameData});\n                           }} />\n                           </FormGroup>\n                           <FormGroup>\n                           <Label for=\"genre\">Genre</Label>\n                           <Input id=\"genre\" value={this.state.editGameData.genre} onChange={(e) => {\n                               let { editGameData} = this.state;\n                 \n                               editGameData.genre=e.target.value;\n                               this.setState({editGameData});\n                           }} />\n                 \n                             </FormGroup>\n                             <FormGroup>\n                           <Label for=\"gameconsole\">Genre</Label>\n                           <Input id=\"gameconsole\" value={this.state.editGameData.gameconsole} onChange={(e) => {\n                               let { editGameData} = this.state;\n                 \n                               editGameData.gameconsole=e.target.value;\n                               this.setState({editGameData});\n                           }} />\n                 </FormGroup>\n                 </ModalBody>\n                         <ModalFooter>\n                           <Button color=\"primary\" onClick={this.updateGame}>Update game </Button>{' '}\n                           <Button color=\"secondary\" onClick={this.toggleEditGameModal}>Cancel</Button>\n                         </ModalFooter>\n                       </Modal>\n                        <Button color=\"success\" size=\"sm\" className=\"mr-2\" \n                        onClick={this.editGame.bind(this, singleGame.id, singleGame.name,singleGame.genre,singleGame.gameconsole)}>\n                            Edit</Button>\n                </tr>\n\n            )\n            });\n            \n        return (\n           \n                <Table>\n                    <thead>\n                        <tr>\n                            {thumbs}\n\n                        </tr>\n                    </thead>\n                </Table>\n            \n        )   \n    }\n}"]},"metadata":{},"sourceType":"module"}